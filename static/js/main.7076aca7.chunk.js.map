{"version":3,"sources":["example.png","Image/index.js","Slider/index.js","Settings/index.js","App.js","reportWebVitals.js","index.js"],"names":["Image","props","settings","useState","file","setFile","className","type","accept","onChange","e","URL","createObjectURL","target","files","error","onClick","example","src","style","filter","blur","brightness","contrast","saturate","invert","alt","Slider","label","min","max","value","Settings","setSettings","returnToDefault","Object","keys","map","setting","index","App","defaultSettings","image","setImage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAAe,G,YAAA,IAA0B,qCC8D1BA,MA1Df,SAAeC,GAAQ,IAEhBC,EAAaD,EAAbC,SAFe,EAIGC,mBAAS,IAJZ,mBAIfC,EAJe,KAITC,EAJS,KAgBrB,OACC,sBAAKC,UAAU,iBAAf,UACO,uBACCC,KAAK,OACLC,OAAO,UACPC,SAAW,SAAAC,GACV,IACFL,EAAQM,IAAIC,gBAAgBF,EAAEG,OAAOC,MAAM,KAEzC,MAAMC,QAKR,qBAAKT,UAAU,eAAf,0BAGA,qBACCA,UAAU,gBACVU,QAAU,SAAAN,GAAC,OAAIL,EAAQY,IAFxB,qBAMA,sBAAKX,UAAU,YAAf,UAEW,KAATF,GACA,qBACCc,IAAMd,EACNe,MArCH,CACNC,OAAQ,QAAUlB,EAASmB,KAAO,GAA1B,kBACUnB,EAASoB,WAAa,GADhC,cAE4B,EAApBpB,EAASqB,SAFjB,eAG4B,EAApBrB,EAASsB,SAHjB,aAIMtB,EAASuB,OAAS,MAiCvBC,IAAI,KAIC,KAATtB,GACA,+B,0BC5BOuB,MAxBf,SAAgB1B,GAAQ,IAEjB2B,EAAqC3B,EAArC2B,MAAOC,EAA8B5B,EAA9B4B,IAAKC,EAAyB7B,EAAzB6B,IAAKC,EAAoB9B,EAApB8B,MAAOtB,EAAaR,EAAbQ,SAE9B,OACC,sBAAKH,UAAU,mBAAf,UACC,qBAAKA,UAAU,aAAf,SACC,qBAAKA,UAAU,QAAf,SACGsB,MAGJ,qBAAKtB,UAAU,aAAf,SACC,uBACCC,KAAK,QACLsB,IAAMA,EACNC,IAAMA,EACNC,MAAQA,EACRtB,SAAWA,UCgBDuB,MAhCf,SAAkB/B,GAAQ,IAEnBC,EAA2CD,EAA3CC,SAAU+B,EAAiChC,EAAjCgC,YAAaC,EAAoBjC,EAApBiC,gBAE7B,OACC,sBAAK5B,UAAU,WAAf,UACC,qBAAKA,UAAU,QAAf,SAEC6B,OAAOC,KAAKlC,GAAUmC,KAAI,SAACC,EAASC,GAAV,OACzB,cAAC,EAAD,CAECX,MAAQU,EACRP,MAAQ7B,EAASoC,GACjB7B,SAAW,SAAAC,GAAC,OACXuB,EAAY,2BAAK/B,GAAN,kBAAiBoC,EAAU5B,EAAEG,OAAOkB,UAEhDF,IAAI,IACJC,IAAI,OAPES,QAYT,qBACCjC,UAAU,SACVU,QAAUkB,EAFX,oCCsBYM,MAzCf,WAEC,IAAIC,EAAkB,CACrBnB,WAAY,GACZC,SAAU,GACVC,SAAU,GACVC,OAAQ,EACRJ,KAAM,GAPO,EAUkBlB,mBAASsC,GAV3B,mBAURvC,EAVQ,KAUE+B,EAVF,OAYY9B,mBAAS,IAZrB,mBAYRuC,EAZQ,KAYDC,EAZC,KAcd,OACC,sBAAKrC,UAAU,MAAf,UACC,qBAAKA,UAAU,SAAf,iCAGA,qBAAKA,UAAU,mBAAf,SACC,sBAAKA,UAAU,YAAf,UACC,qBAAKA,UAAU,aAAf,SACC,cAAC,EAAD,CACCoC,MAAQA,EACRC,SAAWA,EACXzC,SAAWA,MAGb,qBAAKI,UAAU,2BAAf,SACC,cAAC,EAAD,CACCJ,SAAWA,EACX+B,YAAcA,EACdC,gBAAkB,kBAAMD,EAAYQ,iBC1B5BG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7076aca7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/example.983cae34.png\";","import './style.css';\nimport example from '../example.png';\nimport { useState } from 'react';\n\nfunction Image(props) {\n\n\tlet { settings } = props;\n\n\tlet [ file, setFile ] = useState(\"\");\n\n\tlet settingsToStyle = () => {\n\t\treturn {\n\t\t\tfilter: \"blur(\" + settings.blur / 20 + \"px) \" + \n\t\t\t\t\t\"brightness(\" + settings.brightness / 50 + \") \" + \n\t\t\t\t\t\"contrast(\" + settings.contrast * 2 + \"%) \" + \n\t\t\t\t\t\"saturate(\" + settings.saturate * 2 + \"%) \" + \n\t\t\t\t\t\"invert(\" + settings.invert + \"%)\"\n\t\t};\n\t};\n\n\treturn (\n\t\t<div className=\"image centered\">\n\t        <input \n\t        \ttype=\"file\"\n\t        \taccept=\"image/*\" \n\t        \tonChange={ e => {\n\t        \t\ttry {\n\t\t    \t\t\tsetFile(URL.createObjectURL(e.target.files[0]))\n\t        \t\t}\n\t        \t\tcatch(error) {\n\n\t        \t\t}\n\t        \t} }\n\t        />\n\t        <div className=\"input button\">\n\t        \tSelect Image\n\t        </div>\n\t        <div \n\t        \tclassName=\"sample button\"\n\t        \tonClick={ e => setFile(example) }\n\t        >\n\t        \tExample\n\t        </div>\n\t        <div className=\"container\">\n\t        \t{ \n\t        \t\tfile !== \"\" && \n\t\t\t        <img \n\t\t\t        \tsrc={ file }\n\t\t\t        \tstyle={ settingsToStyle() }\n\t\t\t        \talt=\"\"\n\t\t\t        />\n\t\t\t    }\n\t\t\t    {\n\t\t\t    \tfile === \"\" &&\n\t\t\t    \t<div></div>\n\t\t\t    }\n\t        </div>\n\t\t</div>\n\t);\n\n}\n\nexport default Image;","import './style.css';\n\nfunction Slider(props) {\n\n\tlet { label, min, max, value, onChange } = props;\n\n\treturn (\n\t\t<div className=\"slider table-row\">\n\t\t\t<div className=\"table-cell\">\n\t\t\t\t<div className=\"label\">\n\t\t\t\t\t{ label }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"table-cell\">\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin={ min }\n\t\t\t\t\tmax={ max }\n\t\t\t\t\tvalue={ value } \n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Slider;\n","import './style.css';\nimport Slider from '../Slider/';\n\nfunction Settings(props) {\n\n\tlet { settings, setSettings, returnToDefault } = props;\n\n\treturn (\n\t\t<div className=\"settings\">\n\t\t\t<div className=\"table\">\n\t\t\t{\n\t\t\t\tObject.keys(settings).map((setting, index) =>\n\t\t\t\t\t<Slider \n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tlabel={ setting }\n\t\t\t\t\t\tvalue={ settings[setting] }\n\t\t\t\t\t\tonChange={ e => \n\t\t\t\t\t\t\tsetSettings({ ...settings, [setting]: e.target.value }) \n\t\t\t\t\t\t}\n\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\tmax=\"100\"\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tclassName=\"button\"\n\t\t\t\tonClick={ returnToDefault }\n\t\t\t>\n\t\t\t\tRevert to Original\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Settings;\n","import './App.css';\nimport { useState } from 'react';\n\nimport Image from './Image/';\nimport Settings from './Settings/';\n\nfunction App() {\n\n\tlet defaultSettings = {\n\t\tbrightness: 50,\n\t\tcontrast: 50,\n\t\tsaturate: 50,\n\t\tinvert: 0,\n\t\tblur: 0,\n\t};\n\n\tlet [ settings, setSettings ] = useState(defaultSettings);\n\n\tlet [ image, setImage ] = useState({ })\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"header\">\n\t\t\t\tImage Filter Editor\n\t\t\t</div>\n\t\t\t<div className=\"table full-width\">\n\t\t\t\t<div className=\"table-row\">\n\t\t\t\t\t<div className=\"table-cell\">\n\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\timage={ image }\n\t\t\t\t\t\t\tsetImage={ setImage }\n\t\t\t\t\t\t\tsettings={ settings }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"table-cell settings-cell\">\n\t\t\t\t\t\t<Settings \n\t\t\t\t\t\t\tsettings={ settings }\n\t\t\t\t\t\t\tsetSettings={ setSettings }\n\t\t\t\t\t\t\treturnToDefault={ () => setSettings(defaultSettings) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}